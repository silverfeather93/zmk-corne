/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 #define MTGAP 0
 #define QWERTY 1
 #define NAV 2
 #define NUM 3
 #define FUNC 4

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Y    |  P      |  O      |  U      |  J  |   |  K  |  D      |  L      |  C      |  W      | BKSP |
// | CTRL | gui(I)|  sft(N) |  ctl(E) |  alt(A) |  .  |   |  M  |  alt(H) |  ctl(T) |  sft(S) |  gui(R) |  '   |
// | SHFT |  Q    |  Z      |  ;      |  ,      |  '  |   |  B  |  F      |  G      |  V      |  X      | ESC  |
//                          | bksp    | NUM     | SPC |   | ENT | RSE     | ALT     |
                        bindings = <
   &kp TAB   &kp Y      &kp P       &kp O       &kp U      &kp J         &kp K   &kp D      &kp L      &kp C       &kp W      &kp BSPC
   &kp LCTRL &mt LGUI I &mt LSHFT N &mt LCTRL E &mt LALT A &kp DOT       &kp M   &mt LALT H &mt LCTL T &mt LSHFT S &mt LGUI R &kp SQT
   &kp LSHFT &kp Q      &kp Z       &kp SEMI    &kp COMMA  &kp SQT       &kp B   &kp F      &kp G      &kp V       &kp X      &kp ESC
                                    &kp BKSP    &mo NUM    &kp ENT       &kp SPC &mo NAV    &kp DEL
                        >;
                };

                qwerty_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q    |  W      |  E      |  R      |  T  |   |  Y  |  U      |  I      |  O      |  P      | BKSP |
// | CTRL | gui(A)|  sft(S) |  ctl(D) |  alt(F) |  G  |   |  H  |  alt(J) |  ctl(K) |  sft(L) |  gui(;) |  '   |
// | SHFT |  Z    |  X      |  C      |  V      |  B  |   |  N  |  M      |  ,      |  .      |  /      | ESC  |
//                          | GUI     | LWR     | SPC |   | ENT | RSE     | ALT     |
                        bindings = <
   &kp TAB   &kp Q      &kp W       &kp E       &kp R      &kp T         &kp Y   &kp U      &kp I      &kp O       &kp P         &kp BSPC
   &kp LCTRL &mt LGUI A &mt LSHFT S &mt LCTRL D &mt LALT F &kp G         &kp H   &mt LALT J &mt LCTL K &mt LSHFT L &mt LGUI SEMI &kp SQT
   &kp LSHFT &kp Z      &kp X       &kp C       &kp V      &kp B         &kp N   &kp M      &kp COMMA  &kp DOT     &kp FSLH      &kp ESC
                                    &kp BKSP    &mo NUM    &kp ENT       &kp SPC &mo NAV    &kp DEL
                        >;
                };
                
                navigaition_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  `  |     |  up |     |     |   |     |       | PGUP|       |     | BKSP |
// | BTCLR| BT1 | left| down|right|     |   |A(F4)| HOME  | PGDN| END   |     |      |
// | SHFT | ESC |MTGAP|QWERT|     |     |   |     |G(left)|G(UP)|G(DOWN)|     |      |
//                    |     |     |     |   |     |       |     |
                        bindings = <
   &kp TAB    &kp GRAVE    &trans       &kp UP       &trans       &kp C(W)       &trans     &trans       &kp PG_UP    &trans     &trans   &kp BSPC
   &bt BT_CLR &kp TAB      &kp LEFT     &kp DOWN     &kp RIGHT    &trans         &kp LA(F4) &kp HOME     &kp PG_DN    &kp END    &trans   &trans
   &trans     &kp ESC      &to MTGAP    &to QWERTY   &trans       &trans         &trans     &kp LG(LEFT) &kp LG(DOWN) &LG(RIGHT) &kp CAPS &trans
                                        &trans       &trans       &trans         &trans     &trans       &trans
                        >;
                };

                number_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  +  |  -  |  *  |  /  |  %  |   |  \  |  (  |  )  |  [  |  ]  | BKSP |
// | CTRL |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  `   |
// | SHFT |  !  |  ~  |  ;  |  &  |  '  |   |  =  |  <  |  >  |  {  |  }  |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp PLUS &kp MINUS &kp ASTRK &kp SLASH &kp PRCNT &kp BSLH  &kp LPAR  &kp RPAR  &kp LBKT &kp RBKT &kp BSPC
   &kp LCTRL &kp N1   &kp N2    &kp N3    &kp N4    &kp N5    &kp N6    &kp N7    &kp N8    &kp N9   &kp N0   &kp GRV
   &kp LSHFT &kp EXCL &kp TILDE &kp SEMI  &kp AMPS  &kp SQT   &kp EQUAL &kp LT    &kp GT    &kp LBRC &kp RBRC &kp TILDE
                                &trans    &trans    &trans    &trans    &trans    &trans
                        >;
                };

                function_layer {
// -----------------------------------------------------------------------------------------
// |      | BT1 | BT2 | BT3 |     |     |   |     |     |     |     | F12 | BKSP |
// |      |BTCLR|     |     |     |     |   |     |     |     |     | F11 |  `   |
// |      | F1  | F2  | F3  | F4  | F5  |   | F6  | F7  | F8  | F9  | F10 |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &trans &trans      &trans &trans &trans &trans &kp F12 &trans
   &trans &bt BT_CLR   &kp C_VOL_DN &kp C_VOL_UP &trans &trans      &trans &trans &trans &trans &kp F11 &trans
   &trans &kp F1       &kp F2       &kp F3       &kp F4 &kp F5      &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &trans
                                    &trans       &trans &trans      &trans &trans &trans
                        >;
                };
        };
};
